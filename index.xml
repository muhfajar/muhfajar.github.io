<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Muhamad Fajar</title><link>https://muhfajar.blog/</link><description>Recent content on Muhamad Fajar</description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Fri, 27 Mar 2020 11:24:21 +0700</lastBuildDate><atom:link href="https://muhfajar.blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://muhfajar.blog/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 16:08:01 +0700</pubDate><guid>https://muhfajar.blog/posts/creating-a-new-theme/</guid><description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://muhfajar.blog/posts/migrate-to-hugo-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 17:32:59 +0700</pubDate><guid>https://muhfajar.blog/posts/migrate-to-hugo-from-jekyll/</guid><description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>Modern Problems Require Modern Solutions</title><link>https://muhfajar.blog/posts/modern-problems-require-modern-solutions/</link><pubDate>Sat, 09 May 2020 15:55:14 +0700</pubDate><guid>https://muhfajar.blog/posts/modern-problems-require-modern-solutions/</guid><description>Recently I posted about my experience with the longest work from home (posted in Bahasa) I ever had so far. The biggest challenge about work from home on the internet era is an internet connection itself. I often got a bad connection in the middle of the meeting, that not good especially I&amp;rsquo;m the host in a meeting, not only once but &amp;ldquo;daily standup meeting&amp;rdquo;. Yes, you can see daily in the quoted word.</description></item><item><title>Settings</title><link>https://muhfajar.blog/settings/</link><pubDate>Fri, 27 Mar 2020 11:24:21 +0700</pubDate><guid>https://muhfajar.blog/settings/</guid><description> &amp;nbsp;&amp;nbsp; &amp;nbsp; Use Bahasa &amp;nbsp;&amp;nbsp; &amp;nbsp; Change font face &amp;nbsp; Increase font size &amp;nbsp; Decrease font size const buttonTextDark = 'Toggle theme to light'; const buttonTextLight = 'Toggle theme to dark'; const buttonTextTocHide = 'Show table of content'; const buttonTextTocShow = 'Hide table of content';</description></item><item><title>Purge Cache with Git Hooks</title><link>https://muhfajar.blog/posts/purge-cache-with-git-hooks/</link><pubDate>Fri, 21 Feb 2020 11:22:17 +0700</pubDate><guid>https://muhfajar.blog/posts/purge-cache-with-git-hooks/</guid><description>In the last post about deploying Now with Cloudflare, I have been describing in general how to deploy a project using Now and how to integrating with Cloudflare. After success deploying, if you set Cloudflare cache to make your website faster I guess you will face issue relate with a cache.
First, if you push or make changes, your website not instantly follow the changes. From my experience that because of cache!</description></item><item><title>Deploying Now With Cloudflare</title><link>https://muhfajar.blog/posts/deploying-now-with-cloudflare/</link><pubDate>Sat, 15 Feb 2020 04:52:59 +0700</pubDate><guid>https://muhfajar.blog/posts/deploying-now-with-cloudflare/</guid><description>:: this post has been updated with the latest update from Vercel (formerly ZEIT) I&amp;rsquo;ve been playing around with Now deployment for a few months. First I thought about Now is magic, with only small configuration (in v2) I can deploy a static website easily and with the latest update, now I can deploy (with default template) any static website without any configuration. That&amp;rsquo;s amazing.
How to Deploy First thing, you need Vercel account, of course.</description></item><item><title>Chat</title><link>https://muhfajar.blog/chat/</link><pubDate>Wed, 30 Jan 2019 13:30:21 +0500</pubDate><guid>https://muhfajar.blog/chat/</guid><description>Hello there, want to chat with stranger within this site, just open inspect and see console. Have a nice day!</description></item><item><title>Résumé</title><link>https://muhfajar.blog/resume/</link><pubDate>Tue, 09 Oct 2018 18:30:21 +0700</pubDate><guid>https://muhfajar.blog/resume/</guid><description>Muhamad Fajar I write software. Usually in Ruby. Sometimes in Go, Python, PHP, or others.
Education 2010-2015 Faculty of Science and Technology; UIN Sunan Gunung Djati (Bandung, Indonesia)
Major: Computer Science/Informatics
Experience 2018-present GoTix Tech Lead/Software Engineer; GoTix is a movie &amp;amp; event discovery with on-demand ticket order services.
Employer: PT. Global Loket Sejahtera
2016-2018 Software Engineer; SoftwareSeni is a tightly-knit team of designers, developers, quality assurance, marketing, content strategy, and customer service.</description></item><item><title>Playing in Ruby Mine</title><link>https://muhfajar.blog/posts/playing-in-ruby-mine/</link><pubDate>Sat, 06 Jan 2018 12:52:59 +0700</pubDate><guid>https://muhfajar.blog/posts/playing-in-ruby-mine/</guid><description>I started as Ruby dev in my new job, previously I worked as PHP and Python dev and I found Ruby is slightly different sometimes especially with PHP. First time I read Ruby documentation, Ruby syntax is familiar, that looks like Python with some additional word every end of a function. For example:
def foo(): print(&amp;#39;bar&amp;#39;) def foo puts &amp;#39;bar&amp;#39; end For framework Ruby have Rails (not only Rails actually, many framework out there) and when I came to my new job, I have only 3 days to learn what Ruby is and what is Rails, so basically I am learning by doing after my quick learn from digging up Ruby and Rails documentation.</description></item><item><title>(Hu)go Template Primer</title><link>https://muhfajar.blog/posts/hugo-template-primer/</link><pubDate>Wed, 02 Apr 2014 20:11:21 +0700</pubDate><guid>https://muhfajar.blog/posts/hugo-template-primer/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://muhfajar.blog/posts/getting-started-with-hugo/</link><pubDate>Wed, 02 Apr 2014 18:14:13 +0700</pubDate><guid>https://muhfajar.blog/posts/getting-started-with-hugo/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item></channel></rss>